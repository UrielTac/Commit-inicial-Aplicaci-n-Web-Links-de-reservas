import * as React from "react"















import { Button } from "@/components/ui/button"















import { Input } from "@/components/ui/input"















import { Percent, HelpCircle } from "lucide-react"















import {















  Tooltip,















  TooltipContent,















  TooltipProvider,















  TooltipTrigger,















} from "@/components/ui/tooltip"































interface DiscountPopupProps {















  onClose: () => void















  day: string















  hour: string















  currentBookings: number















  position: { x: number; y: number }















}































export function DiscountPopup({ onClose, day, hour, currentBookings, position }: DiscountPopupProps) {















  const [discountValue, setDiscountValue] = React.useState("")















  const popupRef = React.useRef<HTMLDivElement>(null)































  React.useEffect(() => {















    const handleClickOutside = (event: MouseEvent) => {















      if (popupRef.current && !popupRef.current.contains(event.target as Node)) {















        onClose()















      }















    }































    document.addEventListener('mousedown', handleClickOutside)































    return () => document.removeEventListener('mousedown', handleClickOutside)















  }, [onClose])































  const handleSubmit = (e: React.FormEvent) => {















    e.preventDefault()















    onClose()















  }































  return (















    <div















      ref={popupRef}















      className="absolute z-50 w-52 bg-white rounded-lg shadow-lg border border-gray-100 animate-in fade-in zoom-in duration-200"















      style={{















        left: '100%',















        top: '50%',















        transform: 'translate(4px, -50%)',















      }}















    >















      {/* Flecha indicadora */}















      <div 















        className="absolute w-2 h-2 bg-white border-l border-b border-gray-100 rotate-45"















        style={{















          left: '-1px',















          top: '50%',















          transform: 'translateY(-50%)',















          zIndex: 1,















        }}















      />































      <div className="relative z-10 p-2.5 space-y-2.5">















        {/* Header */}















        <div className="space-y-0.5">















          <div className="flex items-center">















            <h4 className="text-sm font-medium">Configurar Descuento</h4>















            <TooltipProvider>















              <Tooltip delayDuration={300}>















                <TooltipTrigger>















                  <div className="inline-flex items-center ml-1.5">















                    <HelpCircle 















                      className="h-3.5 w-3.5 text-gray-400 hover:text-gray-500 transition-colors cursor-help" 















                      strokeWidth={2}















                    />















                  </div>















                </TooltipTrigger>















                <TooltipContent 















                  className="max-w-[200px] text-xs" 















                  side="right"















                  sideOffset={5}















                  align="center"















                  avoidCollisions={true}















                >















                  Aplica descuentos específicos para este horario para incentivar reservas en momentos de baja ocupación.















                </TooltipContent>















              </Tooltip>















            </TooltipProvider>















          </div>















          <div className="flex justify-between text-xs text-muted-foreground">















            <span>{day} - {hour}</span>















            <span>{currentBookings} reservas</span>















          </div>















        </div>































        {/* Separador */}















        <div className="h-px bg-gray-100" />































        {/* Formulario */}















        <form onSubmit={handleSubmit} className="space-y-2.5">















          <div className="relative">















            <Input















              type="number"















              placeholder="0"















              min="0"















              max="100"















              value={discountValue}















              onChange={(e) => setDiscountValue(e.target.value)}















              className="pr-8 h-7 text-sm"















            />















            <div className="absolute inset-y-0 right-0 flex items-center pr-2">















              <Percent className="h-3 w-3 text-muted-foreground" />















            </div>















          </div>















          <div className="flex gap-1.5 justify-end">















            <Button















              type="button"















              variant="ghost"















              size="sm"















              className="h-6 text-xs px-2"















              onClick={onClose}















            >















              Cancelar















            </Button>















            <Button















              type="submit"















              size="sm"















              className="h-6 text-xs px-2"















            >















              Aplicar















            </Button>















          </div>















        </form>















      </div>















    </div>















  )















}














































































































































































































































































































































































































































































































































